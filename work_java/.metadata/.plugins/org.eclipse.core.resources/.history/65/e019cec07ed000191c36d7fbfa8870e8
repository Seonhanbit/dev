package September;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.StringTokenizer;

public class s_14503_로봇청소기 {
	static int N, M;
	static int[][] arr;
	static int res = 0;
	static int[] dx = { 0, -1, 0, 1 };
	static int[] dy = { -1, 0, 1, 0 };

	static class robot {
		int x;
		int y;
		int dic;

		robot(int x, int y, int dic) {
			this.x = x;
			this.y = y;
			this.dic = dic;
		}
	}

	public static void main(String[] args) throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st = new StringTokenizer(br.readLine());
		N = Integer.parseInt(st.nextToken());
		M = Integer.parseInt(st.nextToken());
		arr = new int[N][M];
		st = new StringTokenizer(br.readLine());
		int r = Integer.parseInt(st.nextToken());
		int c = Integer.parseInt(st.nextToken());
		int d = Integer.parseInt(st.nextToken());
		for (int i = 0; i < N; i++) {
			st = new StringTokenizer(br.readLine());
			for (int j = 0; j < M; j++) {
				arr[i][j] = Integer.parseInt(st.nextToken());
			}
		}
		robot Robot = new robot(r, c, d, 1);
		arr[r][c] = 1;

		while (true) {
			int cnt4 = 0;
			if (range(r, c - 1) && arr[r][c - 1] == 0) {
				Robot.x += dx[Robot.dic];
				Robot.y += dy[Robot.dic];
				Robot.cnt += 1;
				Robot.dic = Dic(Robot.dic);
				arr[Robot.x][Robot.y] = 1;
				continue;
			}
			if (!range(r, c - 1)) {
				Robot.dic = Dic(Robot.dic);
				continue;
			}
			for (int i = 0; i < 4; i++) {
				int nx = r + dx[i], ny = r + dy[i];
				if (!range(nx, ny))
					continue;
				if (arr[nx][ny] == 1)
					cnt4++;
			}
			if (cnt4 == 4) {

			}

		}
	}

	public static int Dic(int x) {
		if (x == 0)
			return 3;
		else if (x == 2)
			return 1;
		else if (x == 1)
			return 0;
		else
			return 2;
	}
//	if (Robot.dic == 0) {
//	Robot.dic = 3;
//} else if (Robot.dic == 2) {
//	Robot.dic = 1;
//} else if (Robot.dic == 1) {
//	Robot.dic = 0;
//} else if (Robot.dic == 3) {
//	Robot.dic = 2;
//}
}
