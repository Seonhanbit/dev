package D4;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.LinkedList;
import java.util.Queue;
import java.util.StringTokenizer;

public class s_7733_치즈도둑 {
	static int N;
	static int[][] arr;
	static boolean[][] ck_arr;
	static int res;
	static int[] dx = { -1, 1, 0, 0 };
	static int[] dy = { 0, 0, -1, 1 };

	public static boolean range(int x, int y) {
		if (x >= 0 && x < N && y >= 0 && y < N)
			return true;
		else
			return false;
	}

	static class XY {
		int x;
		int y;

		XY(int x, int y) {
			this.x = x;
			this.y = y;
		}
	}

	public static void main(String[] args) throws NumberFormatException, IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		int T = Integer.parseInt(br.readLine());
		for (int tc = 1; tc <= T; tc++) {
			N = Integer.parseInt(br.readLine());
			arr = new int[N][N];
			ck_arr = new boolean[N][N];
			int max = Integer.MIN_VALUE;
			for (int i = 0; i < N; i++) {
				StringTokenizer st = new StringTokenizer(br.readLine());
				for (int j = 0; j < N; j++) {
					arr[i][j] = Integer.parseInt(st.nextToken());
				}
			}
			for (int k = 1; k <= 100; k++) {
				res = 0;
				for (int i = 0; i < N; i++) {
					for (int j = 0; j < N; j++) {
						bfs(i, j);
						System.out.println(i + "===" + j + " " + res);
						if (res > max)
							max = res;
					}
				}
			}
			System.out.println("#" + tc + " " + max);
		}
	}

	public static void bfs(int x, int y) {
		Queue<XY> queue = new LinkedList<XY>();
		queue.add(new XY(x, y));
		ck_arr[x][y] = true;
		while (!queue.isEmpty()) {
			XY tmp = queue.poll();
			for (int i = 0; i < 4; i++) {
				int nx = tmp.x + dx[i], ny = tmp.y + dy[i];
				if (!range(nx, ny))
					continue;
				if (ck_arr[nx][ny])
					continue;
				queue.add(new XY(nx, ny));
				arr[nx][ny] = true;
			}
		}
		res++;
	}
}
