package September;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.StringTokenizer;

public class s_14503_로봇청소기 {
	static int N, M;
	static int[][] arr;
	static int[] r_dx = { -1, 0, 1, 0 };
	static int[] r_dy = { 0, 1, 0, -1 };

	static int[] dx = { 0, -1, 0, 1 };
	static int[] dy = { -1, 0, 1, 0 };

	static boolean range(int x, int y) {
		if (x >= 0 && x < N && y >= 0 && y < M)
			return true;
		else
			return false;
	}

	static class robot {
		int x;
		int y;
		int dic;
		int cnt;

		robot(int x, int y, int dic, int cnt) {
			this.x = x;
			this.y = y;
			this.dic = dic;
			this.cnt = cnt;
		}
	}

	public static void main(String[] args) throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st = new StringTokenizer(br.readLine());
		N = Integer.parseInt(st.nextToken());
		M = Integer.parseInt(st.nextToken());
		arr = new int[N][M];
		st = new StringTokenizer(br.readLine());
		int r = Integer.parseInt(st.nextToken());
		int c = Integer.parseInt(st.nextToken());
		int d = Integer.parseInt(st.nextToken());
		for (int i = 0; i < N; i++) {
			st = new StringTokenizer(br.readLine());
			for (int j = 0; j < M; j++) {
				arr[i][j] = Integer.parseInt(st.nextToken());
			}
		}
		robot Robot = new robot(r, c, d, 1);

		for (int i = r; i < N; i++) {
			for (int j = c; j < M; j++) {
				if (range(i, j - 1) && arr[i][j - 1] == 0) {
					Robot.x = dx[Robot.dic];
					Robot.y = dy[Robot.dic];
					Robot.cnt += 1;
					Robot.dic = Dic(Robot.dic);
//					if (Robot.dic == 0) {
//						Robot.dic = 3;
//					} else if (Robot.dic == 2) {
//						Robot.dic = 1;
//					} else if (Robot.dic == 1) {
//						Robot.dic = 0;
//					} else if (Robot.dic == 3) {
//						Robot.dic = 2;
//					}
				}
				if(!range(i, j - 1)) {
					
				}
			}
		}
	}
	
	public static int Dic(int x) {
		if(x==0)
			return 3;
		else if(x==2)
			return 1;
		else if(x==1)
			return 0;
		else
			return 2;
	}

}
