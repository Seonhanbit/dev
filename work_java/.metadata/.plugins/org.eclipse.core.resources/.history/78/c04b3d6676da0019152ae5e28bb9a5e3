package argorithm3;

import java.util.*;

public class Prim {
	static ArrayList<Node>[] adj;
	static int N, K, sum;

	static class Node {
		int dic;
		int cost;

		Node(int dic, int cost) {
			this.dic = dic;
			this.cost = cost;
		}
	}

	public static void main(String[] args) {
		String input = "7 11\n" + "0 1 31\r\n" + "0 2 31\r\n" + "0 6 31\r\n" + "0 5 60\r\n" + "1 2 21\r\n"
				+ "2 4 46\r\n" + "2 6 25\r\n" + "3 4 34\r\n" + "4 6 51\r\n" + "5 3 18\r\n" + "5 4 40\r\n";
		Scanner br = new Scanner(input);
		StringTokenizer st = new StringTokenizer(br.nextLine());
		N = Integer.parseInt(st.nextToken());
		K = Integer.parseInt(st.nextToken());
		// 각 정점별로 리스트를 하나씩 가지고 있어야하고
		adj = new ArrayList[N];
		// 각 리스트에는 도착정점+경로비용의 정보가 들어있어야함
		for (int i = 0; i < N; i++) {
			adj[i] = new ArrayList<>();
		}
		for (int i = 0; i < K; i++) {
			st = new StringTokenizer(br.nextLine());
			for (int j = 0; j < N; j++) {
				if(j==Integer.parseInt(st.nextToken())) {
					adj[j].add(Integer.parseInt(st.nextToken()),Integer.parseInt(st.nextToken()));
				}
			}
		}

	}

}
