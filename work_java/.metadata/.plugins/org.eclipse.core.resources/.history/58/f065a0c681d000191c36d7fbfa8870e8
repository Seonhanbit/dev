package September;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.StringTokenizer;

public class s_14503_로봇청소기 {
	static int N, M;
	static int[][] arr;
	static int res = 0;
	static int[] dx = { -1, 0, 1, 0};
	static int[] dy = {  0, 1, 0, -1  };

	static class robot {
		int x;
		int y;
		int dic;

		robot(int x, int y, int dic) {
			this.x = x;
			this.y = y;
			this.dic = dic;
		}
	}

	public static void main(String[] args) throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st = new StringTokenizer(br.readLine());
		N = Integer.parseInt(st.nextToken());
		M = Integer.parseInt(st.nextToken());
		arr = new int[N][M];
		st = new StringTokenizer(br.readLine());
		int r = Integer.parseInt(st.nextToken());
		int c = Integer.parseInt(st.nextToken());
		int d = Integer.parseInt(st.nextToken());
		for (int i = 0; i < N; i++) {
			st = new StringTokenizer(br.readLine());
			for (int j = 0; j < M; j++) {
				arr[i][j] = Integer.parseInt(st.nextToken());
			}
		}
		robot R = new robot(r, c, d);

		while (true) {
			if (arr[R.x][R.y] == 0) {
				res++;
				arr[R.x][R.y] = 1;
			}
			if (arr[R.x - 1][R.y] != 0 && arr[R.x + 1][R.y] != 0 && arr[R.x][R.y - 1] != 0 && arr[R.x][R.y + 1] != 0) {
				if (arr[R.x - dx[R.dic]][R.y - dy[R.dic]] != 1) {
					R.x -= dx[R.dic];
					R.y -= dy[R.dic];
				} else
					break;
			} else {
				R.dic = Dic(R.dic);
				if (arr[R.x][R.y - 1] == 0) {
					R.x += dx[R.dic];
					R.y += dy[R.dic];
				}
			}
		}
		System.out.println(res);
	}

	public static int Dic(int x) {
		if (x == 0)
			return 3;
		else if (x == 2)
			return 1;
		else if (x == 1)
			return 0;
		else
			return 2;
	}
//	if (Robot.dic == 0) {
//	Robot.dic = 3;
//} else if (Robot.dic == 2) {
//	Robot.dic = 1;
//} else if (Robot.dic == 1) {
//	Robot.dic = 0;
//} else if (Robot.dic == 3) {
//	Robot.dic = 2;
//}
}
